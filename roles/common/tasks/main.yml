---
# file: main.yml
- name: 'apt-get update'
  apt: update_cache=yes

- name: 'Install apt-transport-https'
  apt: name=apt-transport-https state=present

- name: 'install ufw'
  apt: name=ufw state=present

- name: 'config ufw - reset ufw'
  ufw: state=reset

- name: 'config ufw - add /etc/default/ufw'
  template: src=ufw.j2 dest=/etc/default/ufw

- name: 'config ufw - add /etc/ufw/sysctl.conf'
  template: src=sysctl.conf.j2 dest=/etc/ufw/sysctl.conf

- name: 'config ufw - add /etc/ufw/before.rules'
  template: src=before.rules.j2 dest=/etc/ufw/before.rules

- name: 'config ufw - allow ssh'
  ufw: rule=allow port=22 proto=tcp

- name: 'config ufw - allow docker'
  ufw: rule=allow port=2375 proto=tcp

- name: 'config ufw - reject all other traffic'
  ufw: state=enabled policy=deny

- name: 'Speed up Ansible by purging landscape-common'
  apt: pkg=landscape-common state=absent purge=yes

- name: 'install mailutils'
  apt: name=mailutils state=present

- name: 'install unattended-upgrades'
  apt: name=unattended-upgrades state=present

- name: 'config unattended-upgrades 1/2'
  template: src=10periodic.j2 dest=/etc/apt/apt.conf.d/10periodic

- name: 'config unattended-upgrades 2/2'
  template: src=50unattended-upgrades.j2 dest=/etc/apt/apt.conf.d/50unattended-upgrades

- name: 'config openssh'
  template: src=sshd_config.j2 dest=/etc/ssh/sshd_config

- name: 'config pam 1/2'
  template: src=login.j2 dest=/etc/pam.d/login

- name: 'config pam 2/2'
  template: src=sshd.j2 dest=/etc/pam.d/sshd

- name: 'install git'
  apt: name=git state=present

- name: 'config git'
  template: src=.gitconfig.j2 dest=/root/.gitconfig

- name: 'install zip'
  apt: name=zip state=present

- name: 'install fish'
  apt: name=fish state=present

- name: 'Create fish directory'
  file: path=/root/.config/fish state=directory mode=0755

- name: 'config fish 2/2'
  template: src=config.fish.j2 dest=/root/.config/fish/config.fish

- name: 'set fish as shell'
  user: name=root shell=/usr/bin/fish

- name: 'install ncdu'
  apt: name=ncdu state=present

- name: 'install sl'
  apt: name=sl state=present

- name: 'install toilet'
  apt: name=toilet state=present

- name: 'install screenfetch'
  get_url: url=https://raw.githubusercontent.com/svenvandescheur/screenFetch/master/screenfetch-dev dest=/usr/local/bin/screenfetch

- name: 'config screenfetch'
  file: path=/usr/local/bin/screenfetch mode=0755

- name: 'install whois'
  apt: name=whois state=present

- name: 'configure update-motd 1/2'
  template: src=00-header.j2 dest=/etc/update-motd.d/00-header mode=0755

- name: 'configure update-motd 2/2'
  template: src=10-help-text.j2 dest=/etc/update-motd.d/10-help-text

- name: 'Add docker apt keys'
  apt_key: keyserver=p80.pool.sks-keyservers.net id=58118E89F3A912897C070ADBF76221572C52609D

- name: 'Add docker repository apt'
  apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-xenial main' state=present

- name: 'apt-get update'
  apt: update_cache=yes

- name: 'Install Docker'
  apt: name=docker-engine state=present update_cache=yes

- name: 'configure docker'
  template: src=docker.j2 dest=/etc/default/docker
  register: docker_config

- name: 'restart docker'
  service: name=docker state=restarted
  when: docker_config.changed

- name: 'install python-pip'
  apt: name=python-pip state=latest

- name: 'upgrade pip'
  pip: name=pip state=latest

- name: 'install docker-compose'
  pip: name=docker-compose state=present

- name: 'install working version of docker-py'
  pip: name=docker-py version=1.9.0 state=present
